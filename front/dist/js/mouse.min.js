Graph.prototype.initTapEvent=function(){var r=this,d=$("#single-element-data");$("#total-elements-data").text("nodes:"+r.cy.nodes().size()/2+",edges:"+r.cy.edges().size()),r.cy.on("tap","node",function(e){var t=e.target,o=$('input[name="editCheckBox"]:checked'),i=$("input[name='entireCheckBox']:checked").val(),n="on"==o.val()&&null==i;if(r.is_recombination_network()){if(!t.isChild())return;n?(r.editNodeStyle(t),r.editTagStyle(t)):d.text("Type:node,id:"+t.id()+",degree:"+t.degree())}else n?r.editNodeStyle(t):d.text("Type:node,id:"+t.id()+",degree:"+t.degree())}),r.cy.on("tap","edge",function(e){var t=e.target,o=$('input[name="editCheckBox"]:checked'),i=$("input[name='entireCheckBox']:checked").val();"on"==o.val()&&null==i?r.editEdgeStyle(t):d.text("Type:edge,id:"+t.id()+",source:"+t.data("source")+",target:"+t.data("target"))}),r.isChoose=!1,r.cy.dblclick(),r.cy.on("dblclick","node",function(e){var t=e.target;if($('input[name="editCheckBox"]:checked').val()){var o=t.neighborhood();if(r.is_recombination_network()){var i=o.filter(":child");r.editTagStyle(i)}else i=o.filter("node");var n=o.filter("edge");r.editNodeStyle(i),r.editEdgeStyle(n)}else{if(t.isParent())return;i=r.cy.nodes(),n=r.cy.edges(),i.union(n);if(r.isChoose){if(r.sourceNode!=t){r.targetNode=t,r.isChoose=!1;var d=r.cy.elements().dijkstra(r.sourceNode,function(e){return 1}).pathTo(r.targetNode);(d=d.filter("edge")).style("line-color",r.color),d.style("z-index",10),d.style("width",20),r.path=d}}else r.sourceNode=t,r.isChoose=!0}})},Graph.prototype.initMouseOverEvent=function(){var r=this;r.cy.on("mouseover","node",function(e){if(!$('input[name="editCheckBox"]:checked').val()){var t=e.target;if(r.is_recombination_network()){if(!t.isChild())return;var o=r.cy.filter(":child").union(r.cy.edges())}else{var i=r.cy.nodes(),n=r.cy.edges();o=i.union(n)}var d=t.neighborhood();d=d.union(t),o.difference(d).style("opacity",.1)}}),r.cy.on("mouseout","node",function(e){if(!$('input[name="editCheckBox"]:checked').val()){var t=e.target,o=t.neighborhood();o=o.union(t);var i=r.cy.nodes(),n=r.cy.edges();i.union(n).difference(o).style("opacity",1)}})},Graph.prototype.mouseRightClick=function(){var i=this;i.cy.on("cxttap","node",function(e){var t=e.target;if(t.style("width",""),t.style("height",""),t.style("shape","ellipse"),t.style("background-color",""),t.style("border-width",0),t.style("opacity",1),i.is_recombination_network()){var o=t.parent();o.style("border-width",0),o.style("background-color","")}}),i.cy.on("cxttap","edge",function(e){var t=e.target;t.style("width",10),t.style("line-color",""),t.style("line-style","solid")})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
