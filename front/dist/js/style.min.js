function rgbToString(e){var t=e.match(/[0-9]{0,3}/g),a=[];for(var l in t){""!=(r=t[l])&&a.push(r)}var o="#";for(var l in a){var r;if("0"==(r=a[l]))o+="00";else{var n=parseInt(r).toString(16);if(1==n.length)var c="0"+n;else c=n;o+=c}}return o}Graph.prototype.initStyle=function(){var e=this;e.nodeColor.spectrum({color:"#cccccc",showInput:!0,showInitial:!0,showAlpha:!1,showPalette:!0,preferredFormat:"hex",togglePaletteOnly:!0,palette:[["#000","#444","#666","#999","#ccc","#eee","#f3f3f3","#fff"],["#f00","#f90","#ff0","#0f0","#0ff","#00f","#90f","#f0f"],["#f4cccc","#fce5cd","#fff2cc","#d9ead3","#d0e0e3","#cfe2f3","#d9d2e9","#ead1dc"],["#ea9999","#f9cb9c","#ffe599","#b6d7a8","#a2c4c9","#9fc5e8","#b4a7d6","#d5a6bd"],["#e06666","#f6b26b","#ffd966","#93c47d","#76a5af","#6fa8dc","#8e7cc3","#c27ba0"],["#c00","#e69138","#f1c232","#6aa84f","#45818e","#3d85c6","#674ea7","#a64d79"],["#900","#b45f06","#bf9000","#38761d","#134f5c","#0b5394","#351c75","#741b47"],["#600","#783f04","#7f6000","#274e13","#0c343d","#073763","#20124d","#4c1130"]],togglePaletteMoreText:"more",togglePaletteLessText:"less"}),e.linkColor.spectrum({color:"#999999",showInput:!0,showInitial:!0,showAlpha:!1,showPalette:!0,preferredFormat:"hex",togglePaletteOnly:!0,palette:[["#000","#444","#666","#999","#ccc","#eee","#f3f3f3","#fff"],["#f00","#f90","#ff0","#0f0","#0ff","#00f","#90f","#f0f"],["#f4cccc","#fce5cd","#fff2cc","#d9ead3","#d0e0e3","#cfe2f3","#d9d2e9","#ead1dc"],["#ea9999","#f9cb9c","#ffe599","#b6d7a8","#a2c4c9","#9fc5e8","#b4a7d6","#d5a6bd"],["#e06666","#f6b26b","#ffd966","#93c47d","#76a5af","#6fa8dc","#8e7cc3","#c27ba0"],["#c00","#e69138","#f1c232","#6aa84f","#45818e","#3d85c6","#674ea7","#a64d79"],["#900","#b45f06","#bf9000","#38761d","#134f5c","#0b5394","#351c75","#741b47"],["#600","#783f04","#7f6000","#274e13","#0c343d","#073763","#20124d","#4c1130"]],togglePaletteMoreText:"more",togglePaletteLessText:"less"}),e.tagColor.spectrum({color:"#ffffff",showInput:!0,showInitial:!0,showAlpha:!1,showPalette:!0,preferredFormat:"hex",togglePaletteOnly:!0,palette:[["#000","#444","#666","#999","#ccc","#eee","#f3f3f3","#fff"],["#f00","#f90","#ff0","#0f0","#0ff","#00f","#90f","#f0f"],["#f4cccc","#fce5cd","#fff2cc","#d9ead3","#d0e0e3","#cfe2f3","#d9d2e9","#ead1dc"],["#ea9999","#f9cb9c","#ffe599","#b6d7a8","#a2c4c9","#9fc5e8","#b4a7d6","#d5a6bd"],["#e06666","#f6b26b","#ffd966","#93c47d","#76a5af","#6fa8dc","#8e7cc3","#c27ba0"],["#c00","#e69138","#f1c232","#6aa84f","#45818e","#3d85c6","#674ea7","#a64d79"],["#900","#b45f06","#bf9000","#38761d","#134f5c","#0b5394","#351c75","#741b47"],["#600","#783f04","#7f6000","#274e13","#0c343d","#073763","#20124d","#4c1130"]],togglePaletteMoreText:"more",togglePaletteLessText:"less"}),e.nodeSize.inputmask("999-999",{placeholder:" w - h "}),e.linkWidth.inputmask("999",{placeholder:" w "}),e.tagBorder.inputmask("99",{placeholder:"05"}),e.selectorElement(),e.initStyleBtn()},Graph.prototype.editCheckBox=function(){},Graph.prototype.initStyleBtn=function(){var i=this;i.json=[],i.applyBut.click(function(){var e=$('input[name="editCheckBox"]:checked'),t=$("input[name='entireCheckBox']:checked").val();if(e.val())if(t){if(i.is_recombination_network())var a=i.cy.nodes().filter(":child");else a=i.cy.nodes();i.editNodeStyle(a),i.editTagStyle(a);var l=i.cy.edges();i.editEdgeStyle(l)}else{var o=i.elementSelector.val();if(""!=o){var r=i.handleSelector(o);if(i.add_table_element(r),i.is_recombination_network())a=r.filter(":child");else a=r.filter("node");l=r.filter("edge");return i.editNodeStyle(a),i.editEdgeStyle(l),i.is_recombination_network()&&i.editTagStyle(a),void i.imgBtn.click()}if(0<i.pendingData.length)for(var n in i.pendingData){var c=i.pendingData[n];c.isParent()||(c.isNode()&&(i.editNodeStyle(c),i.editTagStyle(c)),c.isEdge()&&i.editEdgeStyle(c))}}}),i.shapeReset.click(function(){if($('input[name="editCheckBox"]:checked').val()){if(i.is_recombination_network())var e=i.cy.nodes().filter(":child");else e=i.cy.nodes();e.style("width",""),e.style("height",""),e.style("shape","ellipse"),e.style("background-color",""),e.style("border-width",0),e.style("opacity",1);var t=i.cy.edges();t.style("width",10),t.style("line-color",""),t.style("line-style","solid");var a=i.cy.nodes().filter(":parent");a.style("border-width",0),a.style("background-color","#ffffff")}}),i.clearBtn.click(function(){i.pendingData.length=0}),i.imgBtn.click(function(){var e=i.png.attr("num");if(1!=(e=parseInt(e))){var t='<div class="img-col" id=\'img-col-'+e+"'>\n        <a class=\"delete-tag\" num='"+e+"' id='img-close-"+e+'\'>\n             <i class="fa fa-times"></i>\n        </a>\n        <img src="" alt="" num=\''+e+"' class=\"pngImg\" id='pngImg"+e+"'>\n    </div>";i.pngBox.append($(t))}var a="pngImg"+e,l=i.cy.png();$("#"+a).attr("src",l),i.json.push(i.storeStyle(!1)),"false"==i.png.attr("state")&&(i.png.attr("state","true"),i.png.stop().animate({left:0},500),$("#openImg").children("img").attr("src","/static/images/Chevron_left.png")),e++,i.png.attr("num",e);$("#pngImg"+(e-1)).click(function(){var e=$(this).attr("num");e=parseInt(e);var t=i.json[e-1];if(i.is_recombination_network())var a=i.cy.filter(":child");else a=i.cy.nodes();var o=t[0];a.forEach(function(e,t,a){var l=o[t];e.style("background-color",rgbToString(l[0])),e.style("width",l[1]),e.style("height",l[2]),e.style("shape",l[3]),e.style("border-color",l[4]),e.style("border-width",l[5]),e.style("opacity",l[6])});var l=i.cy.edges(),r=t[1];if(l.forEach(function(e,t,a){var l=r[t];e.style("line-color",l[0]),e.style("width",l[1]),e.style("line-style",l[2]),e.style("curve-style",l[3]),e.style("opacity",l[4])}),i.is_recombination_network()){var n=t[2];i.cy.filter(":parent").forEach(function(e,t,a){var l=n[t];e.style("border-color",l[0]),e.style("border-width",l[1]),e.style("border-style",l[2])})}});$("#img-close-"+(e-1)).click(function(){var e=$(this).attr("num");$("#img-col-"+e).remove()})}),$("#openImg").click(function(){var e=i.png.attr("state"),t=$(this);"false"==e?(i.png.attr("state","true"),i.png.stop().animate({left:0},500),t.children("img").attr("src","/static/images/Chevron_left.png")):(i.png.attr("state","false"),i.png.stop().animate({left:-400},500),t.children("img").attr("src","/static/images/Chevron_right.png"))}),i.drapControl.click(function(){var e=$(this).attr("state"),t=i.drapBox.attr("state"),a=i.drapBox.attr("page");if("down"===e){if("1"===a)var l=-168,o=-118;else l=-168,o=-118;"middle"===t?(i.drapBox.animate({bottom:l},200),i.drapBox.attr("state","down")):"up"===t&&(i.drapBox.animate({bottom:o},200),i.drapBox.attr("state","middle"))}else if("up"===e){if("1"===a){l=-68;var r=-118}else l=0,r=-118;"middle"===t?(i.drapBox.animate({bottom:l},200),i.drapBox.attr("state","up")):"down"===t&&(i.drapBox.animate({bottom:r},200),i.drapBox.attr("state","middle"))}}),i.inputReset.click(function(){i.nodeColor.spectrum("set","#cccccc"),i.nodeShape.val("ellipse"),i.nodeSize.val(""),i.linkColor.spectrum("set","#999999"),i.linkWidth.val(""),i.linkShape.val("solid"),i.tagColor.spectrum("set","#ffffff"),i.tagBorder.val(""),i.tagShape.val("null")}),i.labelSize.change(function(){var e=$(this);i.is_recombination_network()?i.cy.filter(":child").style("font-size",e.val()):i.cy.nodes().style("font-size",e.val()),i.cy.edges().style("font-size",e.val())}),i.labeleColor.spectrum({color:"#000000",showInput:!0,showInitial:!0,showAlpha:!1,showPalette:!0,preferredFormat:"hex",togglePaletteOnly:!0,palette:[["#000","#444","#666","#999","#ccc","#eee","#f3f3f3","#fff"],["#f00","#f90","#ff0","#0f0","#0ff","#00f","#90f","#f0f"],["#f4cccc","#fce5cd","#fff2cc","#d9ead3","#d0e0e3","#cfe2f3","#d9d2e9","#ead1dc"],["#ea9999","#f9cb9c","#ffe599","#b6d7a8","#a2c4c9","#9fc5e8","#b4a7d6","#d5a6bd"],["#e06666","#f6b26b","#ffd966","#93c47d","#76a5af","#6fa8dc","#8e7cc3","#c27ba0"],["#c00","#e69138","#f1c232","#6aa84f","#45818e","#3d85c6","#674ea7","#a64d79"],["#900","#b45f06","#bf9000","#38761d","#134f5c","#0b5394","#351c75","#741b47"],["#600","#783f04","#7f6000","#274e13","#0c343d","#073763","#20124d","#4c1130"]],togglePaletteMoreText:"more",togglePaletteLessText:"less",change:function(e){var t=e.toHexString();i.is_recombination_network()?i.cy.filter(":child").style("color",t):i.cy.nodes().style("color",t)}}),$("#shortpath-color").spectrum({color:"#ff0000",showInput:!0,showInitial:!0,showAlpha:!1,showPalette:!0,preferredFormat:"hex",togglePaletteOnly:!0,palette:[["#000","#444","#666","#999","#ccc","#eee","#f3f3f3","#fff"],["#f00","#f90","#ff0","#0f0","#0ff","#00f","#90f","#f0f"],["#f4cccc","#fce5cd","#fff2cc","#d9ead3","#d0e0e3","#cfe2f3","#d9d2e9","#ead1dc"],["#ea9999","#f9cb9c","#ffe599","#b6d7a8","#a2c4c9","#9fc5e8","#b4a7d6","#d5a6bd"],["#e06666","#f6b26b","#ffd966","#93c47d","#76a5af","#6fa8dc","#8e7cc3","#c27ba0"],["#c00","#e69138","#f1c232","#6aa84f","#45818e","#3d85c6","#674ea7","#a64d79"],["#900","#b45f06","#bf9000","#38761d","#134f5c","#0b5394","#351c75","#741b47"],["#600","#783f04","#7f6000","#274e13","#0c343d","#073763","#20124d","#4c1130"]],togglePaletteMoreText:"more",togglePaletteLessText:"less",change:function(e){i.color=e.toHexString()}}),i.saveStyleDataButton.click(function(){var e=i.storeStyle(!0);e=JSON.stringify(e);wnatajax.post({url:"/analysis/storestyle/",data:{id:i.id,data:e},success:function(e){200==e.code&&(console.log(e),wnatalert.alertSuccess("successfully up load style data!"))},fail:function(e){}})}),i.updateStyleDataButton.click(function(){wnatajax.get({url:"/analysis/getstyle/",data:{id:i.id},success:function(e){if(200==e.code){console.log(e);var t=JSON.parse(e.data);if(i.is_recombination_network())var a=i.cy.filter(":child");else a=i.cy.nodes();var o=t[0];a.forEach(function(e,t,a){var l=o[t];e.style("background-color",l.color),e.style("width",l.weight),e.style("height",l.height),e.style("shape",l.shape),e.style("border-color",l.bordercolor),e.style("border-width",l.borderwidth),e.style("opacity",l.opacity)});var l=i.cy.edges(),r=t[1];if(l.forEach(function(e,t,a){var l=r[t];e.style("line-color",l.color),e.style("width",l.width),e.style("line-style",l.shape),e.style("curve-style",l.curveStyle),e.style("opacity",l.opacity)}),i.is_recombination_network()){var n=t[2];i.cy.filter(":parent").forEach(function(e,t,a){var l=n[t];e.style("border-color",l.color),e.style("border-width",l.width),e.style("border-style",l.shape)})}}},fail:function(e){}})})},Graph.prototype.selectorElement=function(){var l=this;l.pendingData=[],l.cy.on("select",function(e){var t=$('input[name="editCheckBox"]:checked'),a=$("input[name='entireCheckBox']:checked").val();"on"==t.val()&&null==a&&l.pendingData.push(e.target)})},Graph.prototype.editNodeStyle=function(e){var t=this.nodeColor.val(),a=this.nodeSize.val(),l=this.nodeShape.val(),o=$('input[name="color-option"]:checked').val(),r=$('input[name="size-option"]:checked').val(),n=$('input[name="shape-option"]:checked').val();if(o&&""!=t&&e.style("background-color",t),r){var c=(a=a.split("-"))[0],i=a[1];"000"==c?e.style("opacity",i/100):"000"==i?(e.style("border-width",c),""!=t&&e.style("border-color",t)):(e.style("width",c),e.style("height",i))}n&&e.style("shape",l)},Graph.prototype.editTagStyle=function(e){var t=this.tagShape.val(),a=e.parent();if($('input[name="tag-option"]:checked').val())if("null"==t)a.style("border-width",0);else{var l=this.tagColor.val(),o=this.tagBorder.val();""!=l&&a.style("border-color",l),""==o?a.style("border-width",5):a.style("border-width",o),a.style("border-style",t)}},Graph.prototype.editEdgeStyle=function(e){var t=this.linkColor.val(),a=this.linkWidth.val(),l=this.linkShape.val(),o=$('input[name="color-option"]:checked').val(),r=$('input[name="size-option"]:checked').val(),n=$('input[name="shape-option"]:checked').val(),c=this.linkCurseLineStyle.val();o&&""!=t&&e.style("line-color",t),r&&""!=a&&("opacity"==l?e.style("opacity",a/100):e.style("width",a)),n&&(e.style("line-dash-pattern",[10,20]),e.style("line-style",l),e.style("curve-style",c))},Graph.prototype.handleSelector=function(e){var t=this;if("node"==e||"edge"==e||"*"==e)return t.cy.filter(e);if("#"==e.substring(0,1))return t.cy.filter(e);if(1==t.numOfString(e,"[")&&1==t.numOfString(e,"]")&&"["==e[0]&&"]"==e[e.length-1])return t.graphFilter(e);for(var a=e.split(""),l=a.length,o=[],r=[],n=["{","(","|","&","!","^"],c=[")","}"],i=["{","("],s=!0,d=0;s;){var f=a[d];if(-1<n.indexOf(f))o.push(f);else if(-1<c.indexOf(f)){do{var p=o.pop();if(-1==i.indexOf(p)){var h=r.pop(),y=r.pop(),u=t.calculate(p,h,y);r.push(u)}}while(-1==i.indexOf(p));0===o.length&&(s=!1)}else if("["===f)for(var g=f,v=!0,b=0;v;)if("]"!=a[d+ ++b])g+=a[d+b];else{g+="]",v=!1,d+=b;u=t.graphFilter(g);r.push(u)}else if(d===l&&0!=o.length){do{p=o.pop(),h=r.pop(),y=r.pop(),u=t.calculate(p,h,y);r.push(u)}while(0!=o.length);0===o.length&&(s=!1)}d+=1}return r.pop()},Graph.prototype.calculate=function(e,t,a){return"&"===e?t.intersection(a):"|"===e?t.union(a):"^"===e?t.symmetricDifference(a):"!"===e?t.difference(a):void 0},Graph.prototype.numOfString=function(e,t){var a=e.split(""),l=0;for(var o in a){t===a[o]&&(l+=1)}return l},Graph.prototype.storeStyle=function(o){var e=this,t=[];if(e.is_recombination_network())var a=e.cy.filter(":child");else a=e.cy.filter("node");var r=[];a.forEach(function(e,t,a){var l=[];l.push(e.style("background-color")),l.push(e.style("width")),l.push(e.style("height")),l.push(e.style("shape")),l.push(e.style("border-color")),l.push(e.style("border-width")),l.push(e.style("opacity")),o&&(l.push(e.position("x")),l.push(e.position("y"))),r.push(l)}),t.push(r);var l=e.cy.edges(),n=[];if(l.forEach(function(e,t,a){var l=[];l.push(e.style("line-color")),l.push(e.style("width")),l.push(e.style("line-style")),l.push(e.style("curve-style")),l.push(e.style("opacity")),n.push(l)}),t.push(n),e.is_recombination_network()){var c=[];e.cy.filter(":parent").forEach(function(e,t,a){var l=[];l.push(e.style("border-color")),l.push(e.style("border-width")),l.push(e.style("border-style")),c.push(l)})}return t.push(c),t},Graph.prototype.add_table_element=function(e){var t=this,a=t.selectorTable.attr("num");a=parseInt(a),t.selectorTable.attr("num",a+1);var l=e.first(),o=$('input[name="color-option"]:checked').val(),r=$('input[name="size-option"]:checked').val(),n=$('input[name="shape-option"]:checked').val(),c=$('input[name="tag-option"]:checked').val(),i=l.isNode();if(i)var s="Node";else s="Edge";var d="",f="";o&&(d+=" color",f+="color:",f+=i?t.nodeColor.val():t.linkColor.val()),f+=" ",r&&(d+=" size",f+="size:",f+=i?t.nodeSize.val()?t.nodeSize.val():"30-30":t.linkWidth.val()?t.linkWidth.val():5),f+=" ",n&&(d+=" shape",f+="shape:",i?f+=t.nodeShape.val():(f+=t.linkShape.val(),f+=t.linkCurseLineStyle.val()));var p="<tr id='tableTr"+a+"'>\n                    <td>"+a+"</td>\n                    <td>"+s+"</td>\n<td>"+t.elementSelector.val()+"</td>\n                    <td>"+d+"</td>\n                    <td>"+f+'</td>\n                    <td><button type="button" id="tableDeleteBtn'+a+'" class="btn btn-block btn-danger btn-xs">Delete</button></td>\n                </tr>';if(t.selectorTable.children("tbody").append($(p)),$("#tableDeleteBtn"+a).click(function(){$("#tableTr"+a).remove()}),c){if("null"==t.tagShape)return;t.selectorTable.attr("num",a+2);var h=a+1;d="",d="color size shape",f="";var y=t.tagBorder.val()?t.tagBorder.val():"5px";f="color:"+t.tagColor.val()+" width:"+y+" shape:"+t.tagShape.val();p="<tr id='tableTr"+h+"'>\n                    <td>"+h+"</td>\n                    <td>Tag</td>\n<td>"+t.elementSelector.val()+"</td>\n                    <td>"+d+"</td>\n                    <td>"+f+'</td>\n                    <td><button type="button" id="tableDeleteBtn'+h+'" class="btn btn-block btn-danger btn-xs">Delete</button></td>\n                </tr>';t.selectorTable.children("tbody").append($(p)),$("#tableDeleteBtn"+h).click(function(){$("#tableTr"+h).remove()})}},Graph.prototype.graphFilter=function(e){var t=this,a=e.substring(1,4).toLowerCase();if("low"!==a&&"top"!==a)return t.cy.filter(e);var l=e.indexOf("@"),o=e.indexOf("="),r=[],n=[];-1==l?t.centralityRange.each(function(e,t){var a=$(t);a.attr("disabled")||0!==parseInt(a.val())&&(r.push(a.attr("centrality_type")),n.push(parseInt(a.val())))}):(n.push(100),r.push(e.substring(l+1,o)));var c=e.substring(o+1,e.length-1);if(-1==o||0==r.length)return t.cy.nodes();$.ajax({url:"/analysis/sort/",type:"GET",data:{id:t.id,kind:a,types:JSON.stringify(r),typesValue:JSON.stringify(n),topnumber:c},async:!1,dataType:"json",success:function(e){200==e.code&&(i=JSON.parse(e.data))},error:function(e){}});var i,s="";for(var d in i){var f=i[d];d==i.length-1?s+="node#"+f:s+="node#"+f+","}return t.cy.elements(s)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
