!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i((t=t||self).adminlte={})}(this,function(t){"use strict";var a,i,e,o,s,d,l,r,f,c,g,h,u,p,_,m,C,v,n,y=(a=jQuery,i="Toasts",e=".lte.toasts",o=a.fn[i],s={INIT:"init"+e,CREATED:"created"+e,REMOVED:"removed"+e},d="#toastsContainerTopRight",l="#toastsContainerTopLeft",r="#toastsContainerBottomRight",f="#toastsContainerBottomLeft",c="toasts-top-right",g="toasts-top-left",h="toasts-bottom-right",u="toasts-bottom-left",_="topLeft",m="bottomRight",v={position:p="topRight",fixed:!0,autohide:!(C="bottomLeft"),autoremove:!0,delay:1e3,fade:!0,icon:null,image:null,imageAlt:null,imageHeight:"25px",title:null,subtitle:null,close:!0,body:null,class:null},n=function(){function n(t,i){this._config=i,this._prepareContainer();var e=a.Event(s.INIT);a("body").trigger(e)}var t=n.prototype;return t.create=function(){var t=a('<div class="toast" role="alert" aria-live="assertive" aria-atomic="true"/>');t.data("autohide",this._config.autohide),t.data("animation",this._config.fade),this._config.class&&t.addClass(this._config.class),this._config.delay&&500!=this._config.delay&&t.data("delay",this._config.delay);var i=a('<div class="toast-header">');if(null!=this._config.image){var e=a("<img />").addClass("rounded mr-2").attr("src",this._config.image).attr("alt",this._config.imageAlt);null!=this._config.imageHeight&&e.height(this._config.imageHeight).width("auto"),i.append(e)}if(null!=this._config.icon&&i.append(a("<i />").addClass("mr-2").addClass(this._config.icon)),null!=this._config.title&&i.append(a("<strong />").addClass("mr-auto").html(this._config.title)),null!=this._config.subtitle&&i.append(a("<small />").html(this._config.subtitle)),1==this._config.close){var o=a('<button data-dismiss="toast" />').attr("type","button").addClass("ml-2 mb-1 close").attr("aria-label","Close").append('<span aria-hidden="true">&times;</span>');null==this._config.title&&o.toggleClass("ml-2 ml-auto"),i.append(o)}t.append(i),null!=this._config.body&&t.append(a('<div class="toast-body" />').html(this._config.body)),a(this._getContainerId()).prepend(t);var n=a.Event(s.CREATED);a("body").trigger(n),t.toast("show"),this._config.autoremove&&t.on("hidden.bs.toast",function(){a(this).delay(200).remove();var t=a.Event(s.REMOVED);a("body").trigger(t)})},t._getContainerId=function(){return this._config.position==p?d:this._config.position==_?l:this._config.position==m?r:this._config.position==C?f:void 0},t._prepareContainer=function(){if(0===a(this._getContainerId()).length){var t=a("<div />").attr("id",this._getContainerId().replace("#",""));this._config.position==p?t.addClass(c):this._config.position==_?t.addClass(g):this._config.position==m?t.addClass(h):this._config.position==C&&t.addClass(u),a(".navbar-nav").append(t)}this._config.fixed?a(this._getContainerId()).addClass("fixed"):a(this._getContainerId()).removeClass("fixed")},n._jQueryInterface=function(e,o){return this.each(function(){var t=a.extend({},v,o),i=new n(a(this),t);"create"===e&&i[e]()})},n}(),a.fn[i]=n._jQueryInterface,a.fn[i].Constructor=n,a.fn[i].noConflict=function(){return a.fn[i]=o,n._jQueryInterface},n);t.Toasts=y,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
