# # # import networkx as nx
import networkx as nx
# # # import time
# # #
# import networkx as nx
# G = nx.les_miserables_graph()
# print(nx.load_centrality(G))
# print(nx.communicability_betweenness_centrality(G))
# # #
# # #
# # #
# # #
# # # # degree_centrality  返回节点字典
# # # # {'Napoleon': 0.013157894736842105, 'Myriel': 0.13157894736842105, 'MlleBaptistine': 0.039473684210526314, 'MmeMagloire': 0.039473684210526314, 'CountessDeLo': 0.013157894736842105, 'Geborand': 0.013157894736842105, 'Champtercier': 0.013157894736842105, 'Cravatte': 0.013157894736842105, 'Count': 0.013157894736842105, 'OldMan': 0.013157894736842105, 'Valjean': 0.47368421052631576, 'Labarre': 0.013157894736842105, 'Marguerite': 0.02631578947368421, 'MmeDeR': 0.013157894736842105, 'Isabeau': 0.013157894736842105, 'Gervais': 0.013157894736842105, 'Listolier': 0.09210526315789473, 'Tholomyes': 0.11842105263157894, 'Fameuil': 0.09210526315789473, 'Blacheville': 0.09210526315789473, 'Favourite': 0.09210526315789473, 'Dahlia': 0.09210526315789473, 'Zephine': 0.09210526315789473, 'Fantine': 0.19736842105263158, 'MmeThenardier': 0.14473684210526316, 'Thenardier': 0.21052631578947367, 'Cosette': 0.14473684210526316, 'Javert': 0.22368421052631576, 'Fauchelevent': 0.05263157894736842, 'Bamatabois': 0.10526315789473684, 'Perpetue': 0.02631578947368421, 'Simplice': 0.05263157894736842, 'Scaufflaire': 0.013157894736842105, 'Woman1': 0.02631578947368421, 'Judge': 0.07894736842105263, 'Champmathieu': 0.07894736842105263, 'Brevet': 0.07894736842105263, 'Chenildieu': 0.07894736842105263, 'Cochepaille': 0.07894736842105263, 'Pontmercy': 0.039473684210526314, 'Boulatruelle': 0.013157894736842105, 'Eponine': 0.14473684210526316, 'Anzelma': 0.039473684210526314, 'Woman2': 0.039473684210526314, 'MotherInnocent': 0.02631578947368421, 'Gribier': 0.013157894736842105, 'MmeBurgon': 0.02631578947368421, 'Jondrette': 0.013157894736842105, 'Gavroche': 0.2894736842105263, 'Gillenormand': 0.09210526315789473, 'Magnon': 0.02631578947368421, 'MlleGillenormand': 0.09210526315789473, 'MmePontmercy': 0.02631578947368421, 'MlleVaubois': 0.013157894736842105, 'LtGillenormand': 0.05263157894736842, 'Marius': 0.25, 'BaronessT': 0.02631578947368421, 'Mabeuf': 0.14473684210526316, 'Enjolras': 0.19736842105263158, 'Combeferre': 0.14473684210526316, 'Prouvaire': 0.11842105263157894, 'Feuilly': 0.14473684210526316, 'Courfeyrac': 0.17105263157894735, 'Bahorel': 0.15789473684210525, 'Bossuet': 0.17105263157894735, 'Joly': 0.15789473684210525, 'Grantaire': 0.13157894736842105, 'MotherPlutarch': 0.013157894736842105, 'Gueulemer': 0.13157894736842105, 'Babet': 0.13157894736842105, 'Claquesous': 0.13157894736842105, 'Montparnasse': 0.11842105263157894, 'Toussaint': 0.039473684210526314, 'Child1': 0.02631578947368421, 'Child2': 0.02631578947368421, 'Brujon': 0.09210526315789473, 'MmeHucheloup': 0.09210526315789473}
# # #
# # # # {'Napoleon': 0.0023434559950116173, 'Myriel': 0.028134336026755365, 'MlleBaptistine': 0.026872999836996418, 'MmeMagloire': 0.026872999836996418, 'CountessDeLo': 0.0023434559950116173, 'Geborand': 0.0023434559950116173, 'Champtercier': 0.0023434559950116173, 'Cravatte': 0.0023434559950116173, 'Count': 0.0023434559950116173, 'OldMan': 0.0023434559950116173, 'Valjean': 0.2676181759885393, 'Labarre': 0.022291152877501864, 'Marguerite': 0.029767714740768846, 'MmeDeR': 0.022291152877501864, 'Isabeau': 0.022291152877501864, 'Gervais': 0.022291152877501864, 'Listolier': 0.01968573670953793, 'Tholomyes': 0.04814615586401209, 'Fameuil': 0.01968573670953793, 'Blacheville': 0.01968573670953793, 'Favourite': 0.01968573670953793, 'Dahlia': 0.01968573670953793, 'Zephine': 0.01968573670953793, 'Fantine': 0.08975922949834116, 'MmeThenardier': 0.12228242172143365, 'Thenardier': 0.18780770515500947, 'Cosette': 0.11103702398134034, 'Javert': 0.18422516321025703, 'Fauchelevent': 0.04004860673568995, 'Bamatabois': 0.06227506194694946, 'Perpetue': 0.011312731565893448, 'Simplice': 0.046055011005835665, 'Scaufflaire': 0.022291152877501864, 'Woman1': 0.037636139536560614, 'Judge': 0.04120828302958653, 'Champmathieu': 0.04120828302958653, 'Brevet': 0.04120828302958653, 'Chenildieu': 0.04120828302958653, 'Cochepaille': 0.04120828302958653, 'Pontmercy': 0.03792696672003669, 'Boulatruelle': 0.01564337736411263, 'Eponine': 0.1419382736148947, 'Anzelma': 0.03765154186582524, 'Woman2': 0.04688494243431425, 'MotherInnocent': 0.025627007259539692, 'Gribier': 0.0033358543820378303, 'MmeBurgon': 0.02665876769778802, 'Jondrette': 0.002220491638940264, 'Gavroche': 0.31783893977497674, 'Gillenormand': 0.06539729702430212, 'Magnon': 0.015632758907497157, 'MlleGillenormand': 0.063169051443388, 'MmePontmercy': 0.008420710184175475, 'MlleVaubois': 0.005261623192198206, 'LtGillenormand': 0.041539839956088884, 'Marius': 0.25911114534178753, 'BaronessT': 0.027029413866137043, 'Mabeuf': 0.1950289120366476, 'Enjolras': 0.26717863282356663, 'Combeferre': 0.21073457488115616, 'Prouvaire': 0.1758163544939673, 'Feuilly': 0.21073457488115616, 'Courfeyrac': 0.23246719717021405, 'Bahorel': 0.22155360926119963, 'Bossuet': 0.24213078637474134, 'Joly': 0.22155360926119963, 'Grantaire': 0.18663538887401082, 'MotherPlutarch': 0.01624446552014877, 'Gueulemer': 0.14543155406625, 'Babet': 0.14543155406625, 'Claquesous': 0.1415362730656279, 'Montparnasse': 0.13602919446668404, 'Toussaint': 0.04688494243431425, 'Child1': 0.028879259336728285, 'Child2': 0.028879259336728285, 'Brujon': 0.1012869150267418, 'MmeHucheloup': 0.1407111607280606}
# # # # eigenvector_centrality_numpy 返回节点字典
# # #
# # # # katz_centrality_numpy  返回节点字典有正有负
# # # # {'Napoleon': -0.030478597532963624, 'Myriel': -0.050828072026066214, 'MlleBaptistine': -0.03143260086872571, 'MmeMagloire': -0.03143260086872573, 'CountessDeLo': -0.03047859753296362, 'Geborand': -0.030478597532963624, 'Champtercier': -0.030478597532963624, 'Cravatte': -0.030478597532963624, 'Count': -0.03047859753296363, 'OldMan': -0.03047859753296363, 'Valjean': 0.02189256751110481, 'Labarre': -0.02320653357924651, 'Marguerite': -0.03204995533325134, 'MmeDeR': -0.023206533579246513, 'Isabeau': -0.023206533579246517, 'Gervais': -0.023206533579246527, 'Listolier': -0.08054351310156795, 'Tholomyes': -0.060325444664221343, 'Fameuil': -0.08054351310156793, 'Blacheville': -0.08054351310156792, 'Favourite': -0.08054351310156792, 'Dahlia': -0.08054351310156793, 'Zephine': -0.08054351310156795, 'Fantine': -0.08843421754004818, 'MmeThenardier': -0.015238892013070169, 'Thenardier': 0.039252076462251685, 'Cosette': -0.007454622224251772, 'Javert': 0.02381697528542495, 'Fauchelevent': -0.026209253511902415, 'Bamatabois': -0.053462220858997406, 'Perpetue': -0.03758185642912395, 'Simplice': -0.03342644344762123, 'Scaufflaire': -0.023206533579246517, 'Woman1': -0.020824836050704013, 'Judge': -0.047587926108577094, 'Champmathieu': -0.047587926108577094, 'Brevet': -0.047587926108577094, 'Chenildieu': -0.047587926108577094, 'Cochepaille': -0.04758792610857709, 'Pontmercy': -0.0011074424229778415, 'Boulatruelle': -0.021470582684131847, 'Eponine': 0.06569559005573744, 'Anzelma': -0.016424912879865125, 'Woman2': -0.021570298273129212, 'MotherInnocent': -0.02582745893043675, 'Gribier': -0.02801671568154724, 'MmeBurgon': 0.00257399315016503, 'Jondrette': -0.025138391015340503, 'Gavroche': 0.30483622582056086, 'Gillenormand': -0.005156953273093596, 'Magnon': -0.027435374858973377, 'MlleGillenormand': -0.007154378508695181, 'MmePontmercy': -0.026221972423524323, 'MlleVaubois': -0.026111228181226527, 'LtGillenormand': -0.004387048227454633, 'Marius': 0.22985337503506412, 'BaronessT': -0.002926148154159933, 'Mabeuf': 0.23214300261989423, 'Enjolras': 0.2916724093939905, 'Combeferre': 0.2690901811725082, 'Prouvaire': 0.2270905104766029, 'Feuilly': 0.26909018117250816, 'Courfeyrac': 0.29081455065412987, 'Bahorel': 0.28484222428542655, 'Bossuet': 0.2868324576955271, 'Joly': 0.2848422242854266, 'Grantaire': 0.24284255358952117, 'MotherPlutarch': -0.002181490068367569, 'Gueulemer': 0.030619203981907206, 'Babet': 0.030619203981907206, 'Claquesous': 0.029422493397673524, 'Montparnasse': 0.03200455780127728, 'Toussaint': -0.021570298273129146, 'Child1': 0.005653146946332299, 'Child2': 0.0056531469463322985, 'Brujon': 0.02784914481977453, 'MmeHucheloup': 0.17327247424210127}
# # #
# # #
# # #
# # # # {'Napoleon': 0.30158730158730157, 'Myriel': 0.4293785310734463, 'MlleBaptistine': 0.41304347826086957, 'MmeMagloire': 0.41304347826086957, 'CountessDeLo': 0.30158730158730157, 'Geborand': 0.30158730158730157, 'Champtercier': 0.30158730158730157, 'Cravatte': 0.30158730158730157, 'Count': 0.30158730158730157, 'OldMan': 0.30158730158730157, 'Valjean': 0.6440677966101694, 'Labarre': 0.39378238341968913, 'Marguerite': 0.41304347826086957, 'MmeDeR': 0.39378238341968913, 'Isabeau': 0.39378238341968913, 'Gervais': 0.39378238341968913, 'Listolier': 0.34080717488789236, 'Tholomyes': 0.3917525773195876, 'Fameuil': 0.34080717488789236, 'Blacheville': 0.34080717488789236, 'Favourite': 0.34080717488789236, 'Dahlia': 0.34080717488789236, 'Zephine': 0.34080717488789236, 'Fantine': 0.46060606060606063, 'MmeThenardier': 0.46060606060606063, 'Thenardier': 0.5170068027210885, 'Cosette': 0.4779874213836478, 'Javert': 0.5170068027210885, 'Fauchelevent': 0.4021164021164021, 'Bamatabois': 0.42696629213483145, 'Perpetue': 0.3179916317991632, 'Simplice': 0.4175824175824176, 'Scaufflaire': 0.39378238341968913, 'Woman1': 0.3958333333333333, 'Judge': 0.40425531914893614, 'Champmathieu': 0.40425531914893614, 'Brevet': 0.40425531914893614, 'Chenildieu': 0.40425531914893614, 'Cochepaille': 0.40425531914893614, 'Pontmercy': 0.37254901960784315, 'Boulatruelle': 0.34234234234234234, 'Eponine': 0.3958333333333333, 'Anzelma': 0.35185185185185186, 'Woman2': 0.4021164021164021, 'MotherInnocent': 0.39790575916230364, 'Gribier': 0.2878787878787879, 'MmeBurgon': 0.3438914027149321, 'Jondrette': 0.25675675675675674, 'Gavroche': 0.5135135135135135, 'Gillenormand': 0.4418604651162791, 'Magnon': 0.33480176211453744, 'MlleGillenormand': 0.4418604651162791, 'MmePontmercy': 0.3153526970954357, 'MlleVaubois': 0.3076923076923077, 'LtGillenormand': 0.36538461538461536, 'Marius': 0.5314685314685315, 'BaronessT': 0.35185185185185186, 'Mabeuf': 0.3958333333333333, 'Enjolras': 0.4810126582278481, 'Combeferre': 0.3917525773195876, 'Prouvaire': 0.3568075117370892, 'Feuilly': 0.3917525773195876, 'Courfeyrac': 0.4, 'Bahorel': 0.39378238341968913, 'Bossuet': 0.475, 'Joly': 0.39378238341968913, 'Grantaire': 0.3584905660377358, 'MotherPlutarch': 0.2846441947565543, 'Gueulemer': 0.4634146341463415, 'Babet': 0.4634146341463415, 'Claquesous': 0.4523809523809524, 'Montparnasse': 0.4578313253012048, 'Toussaint': 0.4021164021164021, 'Child1': 0.34234234234234234, 'Child2': 0.34234234234234234, 'Brujon': 0.38, 'MmeHucheloup': 0.35348837209302325}
# # # # closeness_centrality 返回节点字典
# # #
# # # # {'Napoleon': 0.0, 'Myriel': 0.18868421052631576, 'MlleBaptistine': 0.05359649122807004, 'MmeMagloire': 0.053596491228070045, 'CountessDeLo': 5.671876224049922e-16, 'Geborand': 0.0, 'Champtercier': 0.0, 'Cravatte': 0.0, 'Count': 0.0, 'OldMan': 0.0, 'Valjean': 0.5863258501710439, 'Labarre': 0.0, 'Marguerite': 0.018509183811264047, 'MmeDeR': 0.0, 'Isabeau': 0.0, 'Gervais': 0.0, 'Listolier': 0.021579415803815293, 'Tholomyes': 0.08445167696208618, 'Fameuil': 0.021579415803815078, 'Blacheville': 0.021579415803815224, 'Favourite': 0.02157941580381541, 'Dahlia': 0.021579415803815408, 'Zephine': 0.021579415803815376, 'Fantine': 0.1975578112331388, 'MmeThenardier': 0.09113068181970178, 'Thenardier': 0.14015128364615823, 'Cosette': 0.11212681343216552, 'Javert': 0.17590997653804172, 'Fauchelevent': 0.04781202657653953, 'Bamatabois': 0.0712387056854585, 'Perpetue': 0.011639241766815014, 'Simplice': 0.04173824593938158, 'Scaufflaire': 0.0, 'Woman1': 0.009543869909316632, 'Judge': 0.021357040714337763, 'Champmathieu': 0.021357040714337826, 'Brevet': 0.02135704071433789, 'Chenildieu': 0.021357040714337982, 'Cochepaille': 0.021357040714337822, 'Pontmercy': 0.027867496252063657, 'Boulatruelle': 0.0, 'Eponine': 0.07208032553089411, 'Anzelma': 0.011928177342512794, 'Woman2': 0.018395770143642135, 'MotherInnocent': 0.014177368448877207, 'Gribier': -6.232831015439475e-19, 'MmeBurgon': 0.02631578947368425, 'Jondrette': 5.983517774821896e-17, 'Gavroche': 0.22368032221423598, 'Gillenormand': 0.06921409394515154, 'Magnon': 0.012282391621196017, 'MlleGillenormand': 0.08106959538058328, 'MmePontmercy': 0.014851074210679755, 'MlleVaubois': 6.232831015439475e-19, 'LtGillenormand': 0.027567947374133803, 'Marius': 0.20793429409304504, 'BaronessT': 0.011071657975733814, 'Mabeuf': 0.06432642110825092, 'Enjolras': 0.09136237100016854, 'Combeferre': 0.03360279360933268, 'Prouvaire': 0.02323222650014244, 'Feuilly': 0.03360279360933222, 'Courfeyrac': 0.04868989849032786, 'Bahorel': 0.03688738010769187, 'Bossuet': 0.06021962566274473, 'Joly': 0.03688738010769195, 'Grantaire': 0.026355342765828245, 'MotherPlutarch': 4.98626481235158e-18, 'Gueulemer': 0.05235212178167211, 'Babet': 0.05235212178167185, 'Claquesous': 0.05298813648181289, 'Montparnasse': 0.047601175444456564, 'Toussaint': 0.018395770143642125, 'Child1': 0.008771929824561483, 'Child2': 0.008771929824561483, 'Brujon': 0.031496554307022924, 'MmeHucheloup': 0.019589418853258968}
# # # # current_flow_betweenness_centrality 返回节点字典
# # #
# # # # print(nx.current_flow_closeness_centrality(G)) = information-
# # # # {'Napoleon': 0.006817302008523267, 'Myriel': 0.013949804042154927, 'MlleBaptistine': 0.013300420150435758, 'MmeMagloire': 0.013300420150435754, 'CountessDeLo': 0.006817302008523267, 'Geborand': 0.006817302008523267, 'Champtercier': 0.006817302008523196, 'Cravatte': 0.006817302008523267, 'Count': 0.006817302008523267, 'OldMan': 0.006817302008523266, 'Valjean': 0.02370477422257356, 'Labarre': 0.008533472068568861, 'Marguerite': 0.012514992716328659, 'MmeDeR': 0.008533472068568861, 'Isabeau': 0.008533472068568861, 'Gervais': 0.008533472068568861, 'Listolier': 0.016131036635676634, 'Tholomyes': 0.018007569892635127, 'Fameuil': 0.016131036635676627, 'Blacheville': 0.01613103663567663, 'Favourite': 0.01613103663567663, 'Dahlia': 0.016131036635676634, 'Zephine': 0.016131036635676634, 'Fantine': 0.02051220221509878, 'MmeThenardier': 0.020669106800790617, 'Thenardier': 0.021711096979370563, 'Cosette': 0.020720297392282296, 'Javert': 0.02210916318090699, 'Fauchelevent': 0.014207411365202299, 'Bamatabois': 0.01854964419995541, 'Perpetue': 0.011485285737568943, 'Simplice': 0.01582209128292565, 'Scaufflaire': 0.008533472068568857, 'Woman1': 0.012608032318452119, 'Judge': 0.01671296257611878, 'Champmathieu': 0.016712962576118782, 'Brevet': 0.01671296257611879, 'Chenildieu': 0.01671296257611879, 'Cochepaille': 0.016712962576118796, 'Pontmercy': 0.01382780304264541, 'Boulatruelle': 0.008260408015630806, 'Eponine': 0.020495017308747386, 'Anzelma': 0.014585542976783527, 'Woman2': 0.014973554929102413, 'MotherInnocent': 0.011657353605732135, 'Gribier': 0.006878250882813016, 'MmeBurgon': 0.008455048134458257, 'Jondrette': 0.005174040820460102, 'Gavroche': 0.022088445861725665, 'Gillenormand': 0.018293863098277227, 'Magnon': 0.011986161369735803, 'MlleGillenormand': 0.0178568830474991, 'MmePontmercy': 0.010980314589315147, 'MlleVaubois': 0.00763354030826702, 'LtGillenormand': 0.015895220796440644, 'Marius': 0.02209204888973232, 'BaronessT': 0.012016909568728737, 'Mabeuf': 0.019880443629535925, 'Enjolras': 0.021138128488512417, 'Combeferre': 0.019867024063714794, 'Prouvaire': 0.01913247682679977, 'Feuilly': 0.019867024063714808, 'Courfeyrac': 0.020408992825125646, 'Bahorel': 0.02007171113988506, 'Bossuet': 0.020523242636883918, 'Joly': 0.020071711139885068, 'Grantaire': 0.019422315666593328, 'MotherPlutarch': 0.007980802123874036, 'Gueulemer': 0.02034716715260592, 'Babet': 0.020347167152605924, 'Claquesous': 0.020356843362334242, 'Montparnasse': 0.019983792385404073, 'Toussaint': 0.014973554929102387, 'Child1': 0.010570168512005712, 'Child2': 0.010570168512005712, 'Brujon': 0.018798567890948654, 'MmeHucheloup': 0.018298352349378166}
# # #
# # # # print(nx.betweenness_centrality(G))
# # # # {'Napoleon': 0.0, 'Myriel': 0.17684210526315788, 'MlleBaptistine': 0.0, 'MmeMagloire': 0.0, 'CountessDeLo': 0.0, 'Geborand': 0.0, 'Champtercier': 0.0, 'Cravatte': 0.0, 'Count': 0.0, 'OldMan': 0.0, 'Valjean': 0.5699890527836184, 'Labarre': 0.0, 'Marguerite': 0.0, 'MmeDeR': 0.0, 'Isabeau': 0.0, 'Gervais': 0.0, 'Listolier': 0.0, 'Tholomyes': 0.04062934817733579, 'Fameuil': 0.0, 'Blacheville': 0.0, 'Favourite': 0.0, 'Dahlia': 0.0, 'Zephine': 0.0, 'Fantine': 0.12964454098819422, 'MmeThenardier': 0.02900241873046176, 'Thenardier': 0.07490122123424225, 'Cosette': 0.023796253454148188, 'Javert': 0.05433155966478436, 'Fauchelevent': 0.026491228070175437, 'Bamatabois': 0.008040935672514621, 'Perpetue': 0.0, 'Simplice': 0.008640295033483888, 'Scaufflaire': 0.0, 'Woman1': 0.0, 'Judge': 0.0, 'Champmathieu': 0.0, 'Brevet': 0.0, 'Chenildieu': 0.0, 'Cochepaille': 0.0, 'Pontmercy': 0.006925438596491228, 'Boulatruelle': 0.0, 'Eponine': 0.011487550654163002, 'Anzelma': 0.0, 'Woman2': 0.0, 'MotherInnocent': 0.0, 'Gribier': 0.0, 'MmeBurgon': 0.02631578947368421, 'Jondrette': 0.0, 'Gavroche': 0.16511250242584766, 'Gillenormand': 0.02021062158319776, 'Magnon': 0.00021720969089390142, 'MlleGillenormand': 0.047598927875243675, 'MmePontmercy': 0.0003508771929824561, 'MlleVaubois': 0.0, 'LtGillenormand': 0.0, 'Marius': 0.132032488621946, 'BaronessT': 0.0, 'Mabeuf': 0.027661236424394314, 'Enjolras': 0.0425533568221771, 'Combeferre': 0.0012501455659350393, 'Prouvaire': 0.0, 'Feuilly': 0.0012501455659350393, 'Courfeyrac': 0.00526702988198833, 'Bahorel': 0.0021854883087570067, 'Bossuet': 0.03075365017995782, 'Joly': 0.0021854883087570067, 'Grantaire': 0.00015037593984962405, 'MotherPlutarch': 0.0, 'Gueulemer': 0.004960383978389518, 'Babet': 0.004960383978389518, 'Claquesous': 0.00486180419559921, 'Montparnasse': 0.0038738298738298727, 'Toussaint': 0.0, 'Child1': 0.0, 'Child2': 0.0, 'Brujon': 0.00043859649122807013, 'MmeHucheloup': 0.0}
# # #
#
# # print(nx.current_flow_betweenness_centrality(G))
# # # # {'Napoleon': 0.0, 'Myriel': 0.18868421052631568, 'MlleBaptistine': 0.053596491228069976, 'MmeMagloire': 0.053596491228069955, 'CountessDeLo': 0.0, 'Geborand': 8.719730590599826e-16, 'Champtercier': 0.0, 'Cravatte': 0.0, 'Count': 0.0, 'OldMan': 0.0, 'Valjean': 0.5863258501710443, 'Labarre': -2.49313240617579e-18, 'Marguerite': 0.018509183811264047, 'MmeDeR': -2.49313240617579e-18, 'Isabeau': -2.49313240617579e-18, 'Gervais': -2.49313240617579e-18, 'Listolier': 0.021579415803815182, 'Tholomyes': 0.0844516769620855, 'Fameuil': 0.02157941580381527, 'Blacheville': 0.021579415803815224, 'Favourite': 0.021579415803815397, 'Dahlia': 0.021579415803815373, 'Zephine': 0.021579415803815317, 'Fantine': 0.19755781123313879, 'MmeThenardier': 0.09113068181970181, 'Thenardier': 0.14015128364615775, 'Cosette': 0.11212681343216535, 'Javert': 0.17590997653804125, 'Fauchelevent': 0.04781202657653942, 'Bamatabois': 0.07123870568545859, 'Perpetue': 0.011639241766815014, 'Simplice': 0.04173824593938151, 'Scaufflaire': -2.49313240617579e-18, 'Woman1': 0.009543869909316592, 'Judge': 0.021357040714337812, 'Champmathieu': 0.0213570407143378, 'Brevet': 0.021357040714337867, 'Chenildieu': 0.0213570407143378, 'Cochepaille': 0.021357040714337916, 'Pontmercy': 0.02786749625206356, 'Boulatruelle': -4.98626481235158e-18, 'Eponine': 0.07208032553089418, 'Anzelma': 0.01192817734251284, 'Woman2': 0.01839577014364212, 'MotherInnocent': 0.014177368448877218, 'Gribier': -6.232831015439475e-19, 'MmeBurgon': 0.02631578947368429, 'Jondrette': 4.9862648123515803e-17, 'Gavroche': 0.2236803222142357, 'Gillenormand': 0.0692140939451516, 'Magnon': 0.01228239162119597, 'MlleGillenormand': 0.081069595380583, 'MmePontmercy': 0.014851074210679691, 'MlleVaubois': 6.232831015439475e-19, 'LtGillenormand': 0.027567947374133574, 'Marius': 0.20793429409304487, 'BaronessT': 0.01107165797573366, 'Mabeuf': 0.06432642110825094, 'Enjolras': 0.09136237100016835, 'Combeferre': 0.033602793609332174, 'Prouvaire': 0.02323222650014207, 'Feuilly': 0.03360279360933243, 'Courfeyrac': 0.048689898490327954, 'Bahorel': 0.03688738010769144, 'Bossuet': 0.06021962566274519, 'Joly': 0.036887380107691846, 'Grantaire': 0.026355342765828457, 'MotherPlutarch': 0.0, 'Gueulemer': 0.05235212178167209, 'Babet': 0.05235212178167171, 'Claquesous': 0.052988136481812914, 'Montparnasse': 0.0476011754444565, 'Toussaint': 0.01839577014364211, 'Child1': 0.008771929824561464, 'Child2': 0.008771929824561478, 'Brujon': 0.0314965543070228, 'MmeHucheloup': 0.019589418853258444}
# # #
# # # # print(nx.communicability_betweenness_centrality(G))
# # # # {'Napoleon': 0.0017917571208077151, 'Myriel': 0.19232008632528716, 'MlleBaptistine': 0.03555256419912513, 'MmeMagloire': 0.03555256419912513, 'CountessDeLo': 0.00179175712080726, 'Geborand': 0.0017917571208072545, 'Champtercier': 0.0017917571208072712, 'Cravatte': 0.001791757120807257, 'Count': 0.0017917571208072606, 'OldMan': 0.0017917571208072574, 'Valjean': 0.7980047466234063, 'Labarre': 0.009927607496852144, 'Marguerite': 0.0217722087270932, 'MmeDeR': 0.0099276074968522, 'Isabeau': 0.009927607496852193, 'Gervais': 0.00992760749685219, 'Listolier': 0.031122616770078528, 'Tholomyes': 0.08657886504814477, 'Fameuil': 0.03112261677007823, 'Blacheville': 0.031122616770078226, 'Favourite': 0.031122616770078226, 'Dahlia': 0.03112261677007823, 'Zephine': 0.031122616770078226, 'Fantine': 0.24431767391759657, 'MmeThenardier': 0.21561896101888783, 'Thenardier': 0.38515038260611895, 'Cosette': 0.1941657589714687, 'Javert': 0.39808242031725055, 'Fauchelevent': 0.05598566826656818, 'Bamatabois': 0.09448192007305932, 'Perpetue': 0.00457186893635812, 'Simplice': 0.051796135567667254, 'Scaufflaire': 0.009927607496852389, 'Woman1': 0.024490115226202393, 'Judge': 0.04519070446920802, 'Champmathieu': 0.04519070446920802, 'Brevet': 0.04519070446920802, 'Chenildieu': 0.04519070446920802, 'Cochepaille': 0.04519070446920802, 'Pontmercy': 0.023686485032514516, 'Boulatruelle': 0.0029798274158108246, 'Eponine': 0.17365291625229498, 'Anzelma': 0.016955025834057627, 'Woman2': 0.03780706773816489, 'MotherInnocent': 0.015526515908781855, 'Gribier': 0.0003921453964363478, 'MmeBurgon': 0.03083342156857525, 'Jondrette': 0.00020355358950168941, 'Gavroche': 0.5605872131145123, 'Gillenormand': 0.0788617757342007, 'Magnon': 0.004350579475037867, 'MlleGillenormand': 0.0995614980052207, 'MmePontmercy': 0.0019429309861405284, 'MlleVaubois': 0.0007073299670581368, 'LtGillenormand': 0.024727143229008503, 'Marius': 0.46449036687867845, 'BaronessT': 0.007783206554607011, 'Mabeuf': 0.20312676450013667, 'Enjolras': 0.37690887826462605, 'Combeferre': 0.19919160929744012, 'Prouvaire': 0.1364074103458202, 'Feuilly': 0.1991916092974401, 'Courfeyrac': 0.24103051376127416, 'Bahorel': 0.21538431925222762, 'Bossuet': 0.29661211326120174, 'Joly': 0.21538431925222778, 'Grantaire': 0.15116078728762986, 'MotherPlutarch': 0.0012761213062319086, 'Gueulemer': 0.22176084568553617, 'Babet': 0.2217608456855361, 'Claquesous': 0.21036717663157767, 'Montparnasse': 0.19359428377658583, 'Toussaint': 0.03780706773816566, 'Child1': 0.00766097599354585, 'Child2': 0.0076609759935458484, 'Brujon': 0.09451281655594874, 'MmeHucheloup': 0.09380993405189424}
# # #
# # print(nx.load_centrality(G))
# # # # {'Napoleon': 0.0017917571208077151, 'Myriel': 0.19232008632528716, 'MlleBaptistine': 0.03555256419912513, 'MmeMagloire': 0.03555256419912513, 'CountessDeLo': 0.00179175712080726, 'Geborand': 0.0017917571208072545, 'Champtercier': 0.0017917571208072712, 'Cravatte': 0.001791757120807257, 'Count': 0.0017917571208072606, 'OldMan': 0.0017917571208072574, 'Valjean': 0.7980047466234063, 'Labarre': 0.009927607496852144, 'Marguerite': 0.0217722087270932, 'MmeDeR': 0.0099276074968522, 'Isabeau': 0.009927607496852193, 'Gervais': 0.00992760749685219, 'Listolier': 0.031122616770078528, 'Tholomyes': 0.08657886504814477, 'Fameuil': 0.03112261677007823, 'Blacheville': 0.031122616770078226, 'Favourite': 0.031122616770078226, 'Dahlia': 0.03112261677007823, 'Zephine': 0.031122616770078226, 'Fantine': 0.24431767391759657, 'MmeThenardier': 0.21561896101888783, 'Thenardier': 0.38515038260611895, 'Cosette': 0.1941657589714687, 'Javert': 0.39808242031725055, 'Fauchelevent': 0.05598566826656818, 'Bamatabois': 0.09448192007305932, 'Perpetue': 0.00457186893635812, 'Simplice': 0.051796135567667254, 'Scaufflaire': 0.009927607496852389, 'Woman1': 0.024490115226202393, 'Judge': 0.04519070446920802, 'Champmathieu': 0.04519070446920802, 'Brevet': 0.04519070446920802, 'Chenildieu': 0.04519070446920802, 'Cochepaille': 0.04519070446920802, 'Pontmercy': 0.023686485032514516, 'Boulatruelle': 0.0029798274158108246, 'Eponine': 0.17365291625229498, 'Anzelma': 0.016955025834057627, 'Woman2': 0.03780706773816489, 'MotherInnocent': 0.015526515908781855, 'Gribier': 0.0003921453964363478, 'MmeBurgon': 0.03083342156857525, 'Jondrette': 0.00020355358950168941, 'Gavroche': 0.5605872131145123, 'Gillenormand': 0.0788617757342007, 'Magnon': 0.004350579475037867, 'MlleGillenormand': 0.0995614980052207, 'MmePontmercy': 0.0019429309861405284, 'MlleVaubois': 0.0007073299670581368, 'LtGillenormand': 0.024727143229008503, 'Marius': 0.46449036687867845, 'BaronessT': 0.007783206554607011, 'Mabeuf': 0.20312676450013667, 'Enjolras': 0.37690887826462605, 'Combeferre': 0.19919160929744012, 'Prouvaire': 0.1364074103458202, 'Feuilly': 0.1991916092974401, 'Courfeyrac': 0.24103051376127416, 'Bahorel': 0.21538431925222762, 'Bossuet': 0.29661211326120174, 'Joly': 0.21538431925222778, 'Grantaire': 0.15116078728762986, 'MotherPlutarch': 0.0012761213062319086, 'Gueulemer': 0.22176084568553617, 'Babet': 0.2217608456855361, 'Claquesous': 0.21036717663157767, 'Montparnasse': 0.19359428377658583, 'Toussaint': 0.03780706773816566, 'Child1': 0.00766097599354585, 'Child2': 0.0076609759935458484, 'Brujon': 0.09451281655594874, 'MmeHucheloup': 0.09380993405189424}
# # #
# # # # print(nx.subgraph_centrality(G))
# # # # print(nx.subgraph_centrality_exp(G))
# # # # {'Napoleon': 3.296667082934239, 'Myriel': 165.07143784811905, 'MlleBaptistine': 141.73019643876012, 'MmeMagloire': 141.73019643876006, 'CountessDeLo': 3.29666708293424, 'Geborand': 3.296667082934241, 'Champtercier': 3.296667082934241, 'Cravatte': 3.2966670829342415, 'Count': 3.2966670829342437, 'OldMan': 3.2966670829342433, 'Valjean': 12555.397449364564, 'Labarre': 93.53520910352043, 'Marguerite': 175.59204368331513, 'MmeDeR': 93.53520910352039, 'Isabeau': 93.53520910352042, 'Gervais': 93.53520910352042, 'Listolier': 224.99217281247775, 'Tholomyes': 558.3928246058246, 'Fameuil': 224.99217281247778, 'Blacheville': 224.9921728124778, 'Favourite': 224.99217281247775, 'Dahlia': 224.99217281247775, 'Zephine': 224.99217281247778, 'Fantine': 1756.6724967884193, 'MmeThenardier': 2810.4204489804933, 'Thenardier': 6210.990331362662, 'Cosette': 2206.416072604111, 'Javert': 6017.421699019907, 'Fauchelevent': 303.56305007867485, 'Bamatabois': 817.159653402341, 'Perpetue': 34.41558157943025, 'Simplice': 414.25283739339045, 'Scaufflaire': 93.53520910352042, 'Woman1': 265.12858363531853, 'Judge': 382.15088594656936, 'Champmathieu': 382.1508859465693, 'Brevet': 382.1508859465693, 'Chenildieu': 382.1508859465693, 'Cochepaille': 382.1508859465693, 'Pontmercy': 242.64515380981402, 'Boulatruelle': 47.159514223000585, 'Eponine': 3417.679089022007, 'Anzelma': 268.10249083760533, 'Woman2': 412.60378711432674, 'MotherInnocent': 125.59414749432632, 'Gribier': 3.9439450216353213, 'MmeBurgon': 118.93114170496271, 'Jondrette': 2.391980744038463, 'Gavroche': 16576.560097801917, 'Gillenormand': 744.8974003501961, 'Magnon': 49.76327828775911, 'MlleGillenormand': 695.9615012686961, 'MmePontmercy': 15.160746913174457, 'MlleVaubois': 6.923805617288825, 'LtGillenormand': 298.91464767667236, 'Marius': 11028.352507377327, 'BaronessT': 123.79658001227862, 'Mabeuf': 6401.329594698146, 'Enjolras': 11823.801837005753, 'Combeferre': 7564.74105269809, 'Prouvaire': 5297.725639018107, 'Feuilly': 7564.741052698095, 'Courfeyrac': 9148.384772126308, 'Bahorel': 8371.325661595089, 'Bossuet': 9838.927127191319, 'Joly': 8371.325661595089, 'Grantaire': 5976.873499979834, 'MotherPlutarch': 46.843067494975976, 'Gueulemer': 3772.4029467443906, 'Babet': 3772.4029467443897, 'Claquesous': 3565.335524597266, 'Montparnasse': 3276.1392913688055, 'Toussaint': 412.60378711432674, 'Child1': 139.5840181071599, 'Child2': 139.5840181071599, 'Brujon': 1806.7288901366178, 'MmeHucheloup': 3376.110502103118}
# # #
# # # # print(nx.harmonic_centrality(G))
# # # # {'Napoleon': 24.65000000000001, 'Myriel': 37.33333333333335, 'MlleBaptistine': 33.83333333333331, 'MmeMagloire': 33.83333333333331, 'CountessDeLo': 24.65000000000001, 'Geborand': 24.65000000000001, 'Champtercier': 24.65000000000001, 'Cravatte': 24.65000000000001, 'Count': 24.65000000000001, 'OldMan': 24.65000000000001, 'Valjean': 55.66666666666667, 'Labarre': 31.66666666666662, 'Marguerite': 33.49999999999997, 'MmeDeR': 31.66666666666662, 'Isabeau': 31.66666666666662, 'Gervais': 31.66666666666662, 'Listolier': 30.11666666666664, 'Tholomyes': 34.749999999999964, 'Fameuil': 30.11666666666664, 'Blacheville': 30.11666666666664, 'Favourite': 30.11666666666664, 'Dahlia': 30.11666666666664, 'Zephine': 30.11666666666664, 'Fantine': 41.00000000000006, 'MmeThenardier': 39.583333333333385, 'Thenardier': 44.16666666666669, 'Cosette': 40.58333333333337, 'Javert': 44.50000000000003, 'Fauchelevent': 33.3333333333333, 'Bamatabois': 36.50000000000001, 'Perpetue': 26.566666666666663, 'Simplice': 34.499999999999986, 'Scaufflaire': 31.66666666666662, 'Woman1': 32.16666666666662, 'Judge': 34.166666666666636, 'Champmathieu': 34.166666666666636, 'Brevet': 34.166666666666636, 'Chenildieu': 34.166666666666636, 'Cochepaille': 34.166666666666636, 'Pontmercy': 31.08333333333329, 'Boulatruelle': 27.583333333333314, 'Eponine': 35.74999999999998, 'Anzelma': 29.166666666666636, 'Woman2': 32.999999999999964, 'MotherInnocent': 32.333333333333286, 'Gribier': 23.150000000000006, 'MmeBurgon': 28.666666666666643, 'Jondrette': 20.849999999999987, 'Gavroche': 46.00000000000004, 'Gillenormand': 37.08333333333336, 'Magnon': 27.61666666666665, 'MlleGillenormand': 37.08333333333336, 'MmePontmercy': 25.866666666666664, 'MlleVaubois': 24.783333333333335, 'LtGillenormand': 30.83333333333329, 'Marius': 45.83333333333336, 'BaronessT': 28.833333333333304, 'Mabeuf': 35.74999999999998, 'Enjolras': 42.00000000000005, 'Combeferre': 35.416666666666636, 'Prouvaire': 32.33333333333329, 'Feuilly': 35.416666666666636, 'Courfeyrac': 36.749999999999986, 'Bahorel': 35.91666666666664, 'Bossuet': 41.00000000000005, 'Joly': 35.91666666666664, 'Grantaire': 32.83333333333329, 'MotherPlutarch': 23.71666666666667, 'Gueulemer': 39.333333333333385, 'Babet': 39.333333333333385, 'Claquesous': 38.75000000000004, 'Montparnasse': 38.66666666666671, 'Toussaint': 32.999999999999964, 'Child1': 28.49999999999998, 'Child2': 28.49999999999998, 'Brujon': 33.083333333333286, 'MmeHucheloup': 31.333333333333297}
# # # r = nx.second_order_centrality(G)
# # # print(r)
# # # print(max(r.values()))
# # # # {'Napoleon': 1410.4809134665047, 'Myriel': 405.65552782287523, 'MlleBaptistine': 455.42995504303735, 'MmeMagloire': 447.05968559311384, 'CountessDeLo': 1410.4809134665047, 'Geborand': 1410.4809134665047, 'Champtercier': 1410.4809134665047, 'Cravatte': 1410.4809134665047, 'Count': 1037.7891921066112, 'OldMan': 1410.4809134665047, 'Valjean': 126.14453013354257, 'Labarre': 1356.765433847222, 'Marguerite': 802.9214849641246, 'MmeDeR': 1356.7654338472335, 'Isabeau': 1356.7654338472335, 'Gervais': 1356.7654338472335, 'Listolier': 433.12233861582894, 'Tholomyes': 408.17697340502104, 'Fameuil': 433.12233861582894, 'Blacheville': 430.19085644020316, 'Favourite': 423.8447309807746, 'Dahlia': 426.3609460706438, 'Zephine': 428.9740579424447, 'Fantine': 277.42443365010405, 'MmeThenardier': 263.8466971770675, 'Thenardier': 216.9671275736432, 'Cosette': 192.86386851965176, 'Javert': 214.9574463117955, 'Fauchelevent': 439.3271810954867, 'Bamatabois': 467.8206778355885, 'Perpetue': 869.5872150591865, 'Simplice': 536.1436185322871, 'Scaufflaire': 1356.7654338472353, 'Woman1': 789.6689177057588, 'Judge': 454.4449941788489, 'Champmathieu': 454.4449941788489, 'Brevet': 498.841963641678, 'Chenildieu': 498.84196364167803, 'Cochepaille': 498.84196364167803, 'Pontmercy': 860.3868227614275, 'Boulatruelle': 1368.2012770230997, 'Eponine': 341.5459570140742, 'Anzelma': 637.3689302139702, 'Woman2': 615.0382998921904, 'MotherInnocent': 754.2108754964042, 'Gribier': 1051.407804826145, 'MmeBurgon': 972.3713224697038, 'Jondrette': 1664.4536607432544, 'Gavroche': 239.55790273222522, 'Gillenormand': 301.1598601925997, 'Magnon': 976.4974050416589, 'MlleGillenormand': 337.8716798588754, 'MmePontmercy': 1064.4613247881343, 'MlleVaubois': 1392.500366984064, 'LtGillenormand': 635.910752829814, 'Marius': 169.4788341018656, 'BaronessT': 975.3983742435798, 'Mabeuf': 408.09788528179735, 'Enjolras': 214.38654751794846, 'Combeferre': 242.5140322920718, 'Prouvaire': 363.9543910075761, 'Feuilly': 288.1641927827674, 'Courfeyrac': 228.280618200021, 'Bahorel': 284.8299842845795, 'Bossuet': 243.50538517663804, 'Joly': 277.2915466820575, 'Grantaire': 388.64376866523634, 'MotherPlutarch': 880.2521706712669, 'Gueulemer': 328.7127438377346, 'Babet': 317.5368230319205, 'Claquesous': 350.7609779181706, 'Montparnasse': 426.68150305514064, 'Toussaint': 688.3359252055457, 'Child1': 786.4761526972449, 'Child2': 786.4761526972449, 'Brujon': 421.9931407492564, 'MmeHucheloup': 546.6830515025215}
# # # # 1664.4536607432544
# # #
# #
# # import networkx as nx
# #
# # G = nx.Graph()
# # nodes = []
# # for i in range(0,67):
# #     nodes.append(i)
# #
# # index_1 = [83,73,69,55,61,46,59,85,40,41,43,36,65,12,38,86,63,48,39,70,51,66,81]
# # index_2 = [26,28,33,94,56,29,72,34,49,25,80,31,27,64,67,60,37,23,84,19,32,8,57,15,5,21,13,53,4,3,20,10,77,2,50,79,6,92,18,89,11,78,90,91]
# # edges = [40,83,83,73,40,73,40,63,63,65,63,81,81,66,63,70,73,41,73,55,73,69,69,41,69,43,69,65,48,41,70,65,41,61,65,61,43,70,43,59,55,46,46,85,59,85,38,59,38,86,86,85,36,59,36,38,36,85,36,86,59,86,38,85,12,38,12,51,51,38,
# #          21,53,21,85,21,84,53,84,84,60,60,72,60,80,60,31,60,37,60,25,60,5,25,56,56,26,27,94,60,8,31,19,19,4,4,13,13,23,23,8,32,57,57,15,8,13,8,4,84,3,3,20,20,50,5,77,77,6,6,20,5,2,2,11,77,6,6,20,2,6,2,92,2,77,2,20,92,10,10,8,2,10,10,79,79,89,89,78,4,79,34,33,64,49,90,91]
# # # map = {
# # #     83:0,73:1,69:2,55:2
# # # }
# # index = []
# # index.extend(index_1)
# # #23
# # index.extend(index_2)
# # map = {}
# # for i in range(0,67):
# #     map.update({index[i]:i})
# # links= []
# #
# # for i in range(0,83):
# #     temp = (map.get(edges[2 * i]),map.get(edges[2 * i +1]))
# #     links.append(temp)
# #
# # G = nx.Graph()
# # G.add_nodes_from(nodes)
# # G.add_edges_from(links)
# # attribute = {}
# # for i in range(0,67):
# #     if i <= 22:
# #         attribute.update({i:1})
# #     else:
# #         attribute.update({i: 0})
# # nx.set_node_attributes(G,attribute,"school")
# # nx.write_gml(G,'ss.gml')
# # #
#
# # import networkx as nx
# # import matplotlib.pyplot as plt
# #
# # # G = nx.les_miserables_graph()
# # G = nx.krackhardt_kite_graph()
# # nx.draw(G,pos=nx.fruchterman_reingold_layout(G))
# # plt.show()
# import numpy as np
# from matplotlib import pyplot as plt
# import matplotlib.colors as colors
# import matplotlib.cbook as cbook
#
#
# #
# # ks = [
# #             'viridis', 'plasma', 'inferno', 'magma', 'cividis']
# # for k in ks:
# #     print(len(plt.get_cmap(k).colors))
# # colorMap = plt.get_cmap('hot')(range(256))
# # colorMap[:,:3] *=256
# # np.set_printoptions(threshold=np.inf)
# # data = np.floor(colorMap)
# # t = data.shape[0]
# # n = np.arange(0,256,1)
# # plt.plot(n,data[:,:1],c='r',label='red')
# # plt.plot(n,data[:,1:2],c='g',label="green")
# # plt.plot(n,data[:,2:3],c='b',label="blue")
# # plt.legend()
# # plt.show()
# # print(data)
# N = 100
# X,Y = np.mgrid[-3:3:complex(0,N),-2:2:complex(0,N)]
# Z1 = np.exp(-(X)**2-(Y)**2)
# Z2 = np.exp(-(X * 10)**2-(Y *10)**2)
# Z = Z1 +50* Z2
# print(Z.shape)
# print(Z.max())
# print(Z.min())
# logNorm = colors.LogNorm(vmin=Z.min(),vmax=Z.max())
# print(logNorm([[10,20]]))
#

# import matplotlib.pyplot as plt
#
# attr = nx.get_node_attributes(G,"label")
# print(attr)

# print(S.size())
# nx.set_node_attributes(S,attr,"name")
# nx.write_gml(S,"a.gml")

# G = nx.read_gml("dataset/MIT.gml")
# largest = max(nx.connected_components(G), key=len)
# S = G.subgraph(largest).copy()
# school = nx.get_node_attributes(S,'school')
# H = nx.Graph()
# H.add_nodes_from(S.nodes())
# H.add_edges_from(S.edges())
# nx.set_node_attributes(H,school,'school')
# nx.write_gml(H,'a.gml')
# G = nx.read_gml("a.gml",label="id")
# school = nx.get_node_attributes(G,'school')
# S = nx.Graph()
# S.add_nodes_from(G.nodes())
# S.add_edges_from(G.edges())
# nx.set_node_attributes(S,school,'school')
# nx.write_gml(S,"b.gml")

# def karate_club_graph1():
#     """Returns Zachary's Karate Club graph.
#
#     Each node in the returned graph has a node attribute 'club' that
#     indicates the name of the club to which the member represented by that node
#     belongs, either 'Mr. Hi' or 'Officer'.
#
#     Examples
#     --------
#     To get the name of the club to which a node belongs::
#
#         >>> import networkx as nx
#         >>> G = nx.karate_club_graph()
#         >>> G.nodes[5]['club']
#         'Mr. Hi'
#         >>> G.nodes[9]['club']
#         'Officer'
#
#     References
#     ----------
#     .. [1] Zachary, Wayne W.
#        "An Information Flow Model for Conflict and Fission in Small Groups."
#        *Journal of Anthropological Research*, 33, 452--473, (1977).
#
#     .. [2] Data file from:
#        http://vlado.fmf.uni-lj.si/pub/networks/data/Ucinet/UciData.htm
#     """
#     # Create the set of all members, and the members of each club.
#     all_members = set(range(34))
#     club1 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 19, 21}
#     # club2 = all_members - club1
#
#     G = nx.Graph()
#     G.add_nodes_from(all_members)
#     G.name = "Zachary's Karate Club"
#
#     zacharydat = """\
# 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0
# 1 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0
# 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0
# 1 1 1 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1
# 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
# 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
# 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
# 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
# 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 1 1
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1
# 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1
# 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1
# 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1
# 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1
# 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 0 0 1 1 1 0 1
# 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 0"""
#
#     for row, line in enumerate(zacharydat.split('\n')):
#         thisrow = [int(b) for b in line.split()]
#         for col, entry in enumerate(thisrow):
#             if entry == 1:
#                 G.add_edge(row, col)
#
#     # Add the name of each member's club as a node attribute.
#     for v in G:
#         G.nodes[v]['category'] = "instructor" if v in club1 else 'admin'
#     return G
# G = karate_club_graph1()
# nx.write_gml(G,"c.gml")
# from itertools import product
# # import matplotlib.pyplot as plt
# # nodes1 = range(0,12)
# # nodes2 = range(12,24)
# # edges = []
# # for edge in product(nodes1,repeat=2):
# #     if edge[0] != edge[1]:
# #         edges.append(edge)
# # for edge in product(nodes2,repeat=2):
# #     if edge[0] != edge[1]:
# #         edges.append(edge)
# # nodes = list(range(0,33))
# # edges.extend([(11,24),(24,25),(25,26),(26,27),(27,28),(28,29),(29,30),(30,31),(31,12),(11,32),(32,12)])
# # G = nx.Graph()
# # G.add_nodes_from(nodes)
# # G.add_edges_from(edges)
# # nx.draw(G,pos=nx.kamada_kawai_layout(G),with_labels=True)
# # plt.show()
# # nx.write_gml(G,"d.gml")
from networkx.algorithms.community import k_clique_communities
G = nx.karate_club_graph()
print(list(k_clique_communities(G, 3)))